---
# tasks file for mssql
- name: add yum repository packages-microsoft-com-mssql-server-2017
  yum_repository:
    name: "{{ item.name }}"
    state: present
    baseurl: "{{ item.baseurl }}"
    description: "{{ item.description }}"
    gpgkey: "{{ mssql_gpgkey }}"
    gpgcheck: yes
  when:
    - ansible_distribution in [ "CentOS", "RedHat", "Fedora" ]
    - mssql_add_repositories | bool
  with_items: "{{ mssql_rhel_repositories }}"
  loop_control:
    label: "{{ item.name }}"

- name: add zypper repository packages-microsoft-com-mssql-server-2017
  zypper_repository:
    name: "{{ item.name }}"
    state: present
    repo: "{{ item.repo }}"
    auto_import_keys: yes
  when:
    - ansible_distribution == "openSUSE Leap"
    - mssql_add_repositories | bool
  with_items: "{{ mssql_opensuse_repositories }}"
  loop_control:
    label: "{{ item.name }}"

- name: add apt key
  apt_key:
    url: "{{ mssql_gpgkey }}"
    state: present
  when:
    - ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"
    - mssql_add_repositories | bool
  register: mssql_add_apt_key
  until: mssql_add_apt_key is succeeded
  retries: 3

- name: add apt repository packages-microsoft-com-mssql-server-2017
  apt_repository:
    repo: deb [arch=amd64] "{{ item.repo }}" xenial main
    state: present
  when:
    - ansible_distribution in [ "Ubuntu", "Debian" ]
    - mssql_add_repositories | bool
  with_items: "{{ mssql_ubuntu_repositories }}"

- name: install software mssql-server (package)
  package:
    name: "{{ mssql_server_package }}"
    state: present
  environment:
    ACCEPT_EULA: Y
  when:
    - ansible_distribution != "Ubuntu"
  notify:
    - stop mssql-server
    - configure mssql-server using mssql-conf
    - set network.ipaddress
  register: mmsql_install_software_mssql_server_package
  until: mmsql_install_software_mssql_server_package is succeeded
  retries: 3

- name: install software in mssql-server (apt)
  apt:
    name: "{{ mssql_server_package }}"
    state: present
    allow_unauthenticated: yes
  environment:
    ACCEPT_EULA: Y
  when:
    - ansible_distribution == "Ubuntu"
  notify:
    - configure mssql-server using mssql-conf
  register: mssql_install_software_in_mssql_server_apt
  until: mssql_install_software_in_mssql_server_apt is succeeded
  retries: 3

- name: flush handlers
  meta: flush_handlers

- name: install software mssql-tools (package)
  package:
    name: mssql-tools
    state: present
  environment:
    ACCEPT_EULA: Y
  when:
    - ansible_distribution != "Ubuntu"
  register: mssql_install_software_mssql_tools_package
  until: mssql_install_software_mssql_tools_package is succeeded
  retries: 3

- name: install software in mssql-tools (apt)
  apt:
    name: mssql-tools
    state: present
    allow_unauthenticated: yes
  environment:
    ACCEPT_EULA: Y
  when:
    - ansible_distribution == "Ubuntu"
  register: mssql_install_software_in_mssql_tools_apt
  until: mssql_install_software_in_mssql_tools_apt is succeeded
  retries: 3

- name: install software mssql-server-agent (package)
  package:
    name: "{{ mssql_server_agent_package }}"
    state: present
  environment:
    ACCEPT_EULA: Y
  when:
    - ansible_distribution != "Ubuntu"
  notify:
    - restart mssql-server
  register: mssql_install_software_mssql_server_agent_package
  until: mssql_install_software_mssql_server_agent_package is succeeded
  retries: 3

- name: install software in mssql-server-agent (apt)
  apt:
    name: "{{ mssql_server_agent_package }}"
    state: present
    allow_unauthenticated: yes
  environment:
    ACCEPT_EULA: Y
  when:
    - ansible_distribution == "Ubuntu"
  notify:
    - restart mssql-server
  register: mssql_install_software_in_mssql_server_agent_apt
  until: mssql_install_software_in_mssql_server_agent_apt is succeeded
  retries: 3

- name: install mssql-server-fts
  package:
    name: "{{ mssql_fts_package }}"
  when:
    - mssql_fts | bool
  notify:
    - restart mssql-server
  register: mssql_install_mssql_server_fts
  until: mssql_install_mssql_server_fts is succeeded
  retries: 3

- name: flush handlers
  meta: flush_handlers

- name: start and enable mssql-server
  service:
    name: mssql-server
    state: started
    enabled: yes
  environment:
    ACCEPT_EULA: Y
  when:
    - ansible_virtualization_type != "docker"
